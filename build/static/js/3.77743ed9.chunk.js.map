{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","submitFormHandler","event","preventDefault","className","classes","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","quote","text","author","DUMMY_QUOTES","QuoteDetail","params","useParams","find","quoteId","path","exact","to","element"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,gHC2BXC,EAxBQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,kBAOR,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAAUN,EAAzC,UACE,sBAAKG,UAAWC,IAAQG,QAASD,SAAUN,EAA3C,UACE,uBAAOQ,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKb,OAEvC,qBAAKK,UAAWC,IAAQQ,QAAxB,SACE,wBAAQT,UAAU,MAAlB,+BCIOU,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAASb,UAAWC,IAAQa,SAA5B,UACE,gDACEF,GACA,wBAAQZ,UAAU,MAAMe,QARC,WAC7BF,GAAmB,IAOf,2BAIDD,GAAmB,cAAC,EAAD,IACpB,gD,iBCVSI,EATU,SAACtB,GACxB,OACE,yBAAQM,UAAWC,IAAQgB,MAA3B,UACE,4BAAIvB,EAAMwB,OACV,qCAAaxB,EAAMyB,aCDnBC,EAAe,CACnB,CAAEd,GAAI,KAAMa,OAAQ,SAAUD,KAAM,0BACpC,CAAEZ,GAAI,KAAMa,OAAQ,WAAYD,KAAM,6BAgCzBG,UA7BK,WAClB,IAAMC,EAASC,cAETN,EAAQG,EAAaI,MAAK,SAACP,GAAD,OAAWA,EAAMX,KAAOgB,EAAOG,WAE/D,OAAKR,EAKH,cAAC,WAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAkBC,KAAMD,EAAMC,KAAMC,OAAQF,EAAME,SAClD,cAAC,IAAD,CAAOO,KAAI,kBAAaJ,EAAOL,OAASU,OAAK,IAC7C,qBAAK3B,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAY4B,GAAE,kBAAaN,EAAOG,QAApB,aAA9B,6BAKF,cAAC,IAAD,CACEC,KAAK,2BACLG,QAAS,cAAC,EAAD,WAhBR","file":"static/js/3.77743ed9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2KDF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__36yhO\",\"loading\":\"NewCommentForm_loading__2Irpk\",\"control\":\"NewCommentForm_control__78tqR\",\"actions\":\"NewCommentForm_actions__K44Yl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__uPFR5\"};","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Routes, Route, Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Sanjay\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Santhosh\", text: \"Learning React is great!\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Routes>\r\n        <HighlightedQuote text={quote.text} author={quote.author} />\r\n        <Route path={`/quotes/${params.quote}`} exact></Route>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n\r\n        <Route\r\n          path=\"quotes/:quoteId/comments\"\r\n          element={<Comments></Comments>}\r\n        ></Route>\r\n      </Routes>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}